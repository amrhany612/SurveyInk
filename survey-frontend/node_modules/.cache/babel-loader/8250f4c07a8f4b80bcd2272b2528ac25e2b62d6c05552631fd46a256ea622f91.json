{"ast":null,"code":"var _jsxFileName = \"E:\\\\programming\\\\SurveyInk\\\\survey-frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from './axiosConfig'; // your axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function checkAuth() {\n      try {\n        // const res = await api.get('api/check-auth/');\n        // console.log('✅ Auth success:', res.data); // <== this should run\n\n        setIsAuthenticated(true);\n      } catch (error) {\n        var _error$response;\n        console.log('Auth check error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    }\n    checkAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Ax+B/BOELR06clzL32vENhaokmk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuth","error","_error$response","console","log","response","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/programming/SurveyInk/survey-frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport api from './axiosConfig'; // your axios instance\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\nuseEffect(() => {\r\n  async function checkAuth() {\r\n    try {\r\n      // const res = await api.get('api/check-auth/');\r\n      // console.log('✅ Auth success:', res.data); // <== this should run\r\n\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.log('Auth check error:', error.response?.data);\r\n      setIsAuthenticated(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  checkAuth();\r\n}, []);\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,eAAeY,SAASA,CAAA,EAAG;MACzB,IAAI;QACF;QACA;;QAEAH,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;QAAA,IAAAC,eAAA;QACdC,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAAF,eAAA,GAAED,KAAK,CAACI,QAAQ,cAAAH,eAAA,uBAAdA,eAAA,CAAgBI,IAAI,CAAC;QACtDT,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IACAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACJ,oBACET,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,eAAe;MAAEC,kBAAkB;MAAEC;IAAQ,CAAE;IAAAJ,QAAA,EAC3EA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CAzBWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}