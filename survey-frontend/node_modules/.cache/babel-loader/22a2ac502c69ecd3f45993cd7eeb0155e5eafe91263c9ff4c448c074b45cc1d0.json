{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams,useNavigate}from'react-router-dom';import api from'../../axiosConfig';import dashboardBg from'../../assets/dashboardBg.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SolvedSurveyForm(){const{id}=useParams();const navigate=useNavigate();const[survey,setSurvey]=useState(null);const[answers,setAnswers]=useState({});const[isRTL,setIsRTL]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchSolvedSurvey=async()=>{try{const token=localStorage.getItem('access');const res=await api.get(\"/surveys/solved/\".concat(id,\"/\"),{headers:{Authorization:\"Bearer \".concat(token)}});const answerMap={};res.data.answers.forEach(a=>{answerMap[a.question.id]=a.answer_text;});setSurvey(res.data.survey);setAnswers(answerMap);setIsRTL(res.data.survey.language==='ar');}catch(err){console.error('Error fetching solved survey:',err);}finally{setLoading(false);}};fetchSolvedSurvey();},[id]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:isRTL?'جار التحميل...':'Loading...'});if(!survey||!survey.questions)return/*#__PURE__*/_jsx(\"p\",{children:isRTL?'لم يتم العثور على الاستبيان':'Survey not found'});return/*#__PURE__*/_jsx(\"div\",{style:{direction:isRTL?'rtl':'ltr',background:\"url(\".concat(dashboardBg,\")\"),backgroundAttachment:'fixed',backgroundRepeat:'no-repeat',backgroundSize:'100% 100%',minHeight:'100vh',padding:'2rem'},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:700,backgroundColor:'#A3B6DED4',borderRadius:12,padding:'2rem',margin:'0 auto',color:'white'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:'#35508C'},children:survey.title}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#35508C'},children:survey.description}),/*#__PURE__*/_jsxs(\"form\",{children:[survey.questions.map((q,i)=>/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',color:'black',padding:12,borderRadius:8,marginBottom:20},children:[/*#__PURE__*/_jsxs(\"label\",{children:[i+1,\". \",q.text]}),q.question_type==='multiple_choice'&&q.choices.map(opt=>{const isChecked=answers[q.id]===opt.text;return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',margin:'6px 0',padding:'6px 12px',borderRadius:6,backgroundColor:isChecked?'#F19303':'transparent',cursor:'not-allowed'},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'relative',width:18,height:18,borderRadius:'50%',border:\"2px solid \".concat(isChecked?'#F19303':'#aaa'),backgroundColor:isChecked?'#F19303':'#eee',marginRight:10}}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:16},children:opt.text})]},opt.id);}),q.question_type==='text'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:answers[q.id]||'',style:{width:'97%',padding:8},readOnly:true,disabled:true}),q.question_type==='scale'&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:q.scale_min_label||'1'}),[1,2,3,4,5].map(val=>{const isChecked=answers[q.id]===String(val);return/*#__PURE__*/_jsxs(\"label\",{style:{padding:'6px 10px',margin:'0 4px',borderRadius:6,backgroundColor:isChecked?'#F19303':'transparent',cursor:'not-allowed'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"q_\".concat(q.id),value:val,checked:isChecked,readOnly:true,disabled:true,style:{marginRight:4}}),val]},val);}),/*#__PURE__*/_jsx(\"span\",{children:q.scale_max_label||'5'})]})]},q.id)),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:24},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>navigate(-1),style:{padding:'0.75rem 2rem',backgroundColor:'#F19303',color:'white',border:'none',borderRadius:8,fontWeight:'bold'},children:isRTL?'عودة':'Back'})})]})]})});}export default SolvedSurveyForm;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","api","dashboardBg","jsx","_jsx","jsxs","_jsxs","SolvedSurveyForm","id","navigate","survey","setSurvey","answers","setAnswers","isRTL","setIsRTL","loading","setLoading","fetchSolvedSurvey","token","localStorage","getItem","res","get","concat","headers","Authorization","answerMap","data","forEach","a","question","answer_text","language","err","console","error","children","questions","style","direction","background","backgroundAttachment","backgroundRepeat","backgroundSize","minHeight","padding","maxWidth","backgroundColor","borderRadius","margin","color","title","description","map","q","i","marginBottom","text","question_type","choices","opt","isChecked","display","alignItems","cursor","position","width","height","border","marginRight","fontSize","type","value","readOnly","disabled","justifyContent","scale_min_label","val","String","name","checked","scale_max_label","textAlign","marginTop","onClick","fontWeight"],"sources":["E:/programming/SurveyInkServer/SurveyInk/survey-frontend/src/pages/Survey/SolvedSurveyForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport api from '../../axiosConfig';\r\nimport dashboardBg from '../../assets/dashboardBg.png'\r\n\r\nfunction SolvedSurveyForm() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [survey, setSurvey] = useState(null);\r\n  const [answers, setAnswers] = useState({});\r\n  const [isRTL, setIsRTL] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSolvedSurvey = async () => {\r\n      try {\r\n        const token = localStorage.getItem('access');\r\n        const res = await api.get(`/surveys/solved/${id}/`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        const answerMap = {};\r\n        res.data.answers.forEach(a => {\r\n          answerMap[a.question.id] = a.answer_text;\r\n        });\r\n        setSurvey(res.data.survey);\r\n        setAnswers(answerMap);\r\n        setIsRTL(res.data.survey.language === 'ar');\r\n      } catch (err) {\r\n        console.error('Error fetching solved survey:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSolvedSurvey();\r\n  }, [id]);\r\n\r\n  if (loading) return <p>{isRTL ? 'جار التحميل...' : 'Loading...'}</p>;\r\n  if (!survey || !survey.questions) return <p>{isRTL ? 'لم يتم العثور على الاستبيان' : 'Survey not found'}</p>;\r\n\r\n  return (\r\n    <div style={{ direction: isRTL ? 'rtl' : 'ltr',background: `url(${dashboardBg})`,backgroundAttachment: 'fixed',backgroundRepeat: 'no-repeat',backgroundSize: '100% 100%', minHeight: '100vh', padding: '2rem' }}>\r\n      <div style={{ maxWidth: 700, backgroundColor: '#A3B6DED4', borderRadius: 12, padding: '2rem', margin: '0 auto', color: 'white' }}>\r\n        <h2 style={{color:'#35508C'}}>{survey.title}</h2>\r\n        <p style={{color:'#35508C'}}>{survey.description}</p>\r\n\r\n        <form>\r\n          {survey.questions.map((q, i) => (\r\n            <div key={q.id} style={{ backgroundColor: 'white', color: 'black', padding: 12, borderRadius: 8, marginBottom: 20 }}>\r\n              <label>{i + 1}. {q.text}</label>\r\n\r\n              {q.question_type === 'multiple_choice' &&\r\n                q.choices.map(opt => {\r\n                  const isChecked = answers[q.id] === opt.text;\r\n\r\n                  return (\r\n                    <div\r\n                      key={opt.id}\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        margin: '6px 0',\r\n                        padding: '6px 12px',\r\n                        borderRadius: 6,\r\n                        backgroundColor: isChecked ? '#F19303' : 'transparent',\r\n                        cursor: 'not-allowed',\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          position: 'relative',\r\n                          width: 18,\r\n                          height: 18,\r\n                          borderRadius: '50%',\r\n                          border: `2px solid ${isChecked ? '#F19303' : '#aaa'}`,\r\n                          backgroundColor: isChecked ? '#F19303' : '#eee',\r\n                          marginRight: 10,\r\n                        }}\r\n                      >\r\n                       \r\n                      </div>\r\n                      <span style={{ fontSize: 16 }}>{opt.text}</span>\r\n                    </div>\r\n                  );\r\n                })\r\n              }\r\n\r\n              {q.question_type === 'text' && (\r\n                <input\r\n                  type=\"text\"\r\n                  value={answers[q.id] || ''}\r\n                  style={{ width: '97%', padding: 8 }}\r\n                  readOnly\r\n                  disabled\r\n                />\r\n              )}\r\n\r\n              {q.question_type === 'scale' && (\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <span>{q.scale_min_label || '1'}</span>\r\n                  {[1, 2, 3, 4, 5].map(val => {\r\n                    const isChecked = answers[q.id] === String(val);\r\n\r\n                    return (\r\n                      <label\r\n                        key={val}\r\n                        style={{\r\n                          padding: '6px 10px',\r\n                          margin: '0 4px',\r\n                          borderRadius: 6,\r\n                          backgroundColor: isChecked ? '#F19303' : 'transparent',\r\n                          cursor: 'not-allowed',\r\n                        }}\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={`q_${q.id}`}\r\n                          value={val}\r\n                          checked={isChecked}\r\n                          readOnly\r\n                          disabled\r\n                          style={{ marginRight: 4 }}\r\n                        />\r\n                        {val}\r\n                      </label>\r\n                    );\r\n                  })}\r\n                  <span>{q.scale_max_label || '5'}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          <div style={{ textAlign: 'center', marginTop: 24 }}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => navigate(-1)}\r\n              style={{\r\n                padding: '0.75rem 2rem',\r\n                backgroundColor: '#F19303',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: 8,\r\n                fontWeight: 'bold'\r\n              }}\r\n            >\r\n              {isRTL ? 'عودة' : 'Back'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SolvedSurveyForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}