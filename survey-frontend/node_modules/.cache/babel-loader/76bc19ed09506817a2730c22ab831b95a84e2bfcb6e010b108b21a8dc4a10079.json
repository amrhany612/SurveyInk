{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import api from'./axiosConfig';// your axios instance\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{async function checkAuth(){try{// const res = await api.get('api/check-auth/');\n// console.log('✅ Auth success:', res.data); // <== this should run\nsetIsAuthenticated(true);}catch(error){var _error$response;console.log('Auth check error:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);setIsAuthenticated(false);}finally{setLoading(false);}}checkAuth();},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,setIsAuthenticated,loading},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuth","error","_error$response","console","log","response","data","Provider","value"],"sources":["/srv/SurveyInk/app/survey-frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport api from './axiosConfig'; // your axios instance\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\nuseEffect(() => {\n  async function checkAuth() {\n    try {\n      // const res = await api.get('api/check-auth/');\n      // console.log('✅ Auth success:', res.data); // <== this should run\n\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.log('Auth check error:', error.response?.data);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  }\n  checkAuth();\n}, []);\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,GAAG,KAAM,eAAe,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEjC,MAAO,MAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd,cAAe,CAAAY,SAASA,CAAA,CAAG,CACzB,GAAI,CACF;AACA;AAEAH,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAE,MAAOI,KAAK,CAAE,KAAAC,eAAA,CACdC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAAF,eAAA,CAAED,KAAK,CAACI,QAAQ,UAAAH,eAAA,iBAAdA,eAAA,CAAgBI,IAAI,CAAC,CACtDT,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CACAC,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CACJ,mBACET,IAAA,CAACC,WAAW,CAACe,QAAQ,EAACC,KAAK,CAAE,CAAEZ,eAAe,CAAEC,kBAAkB,CAAEC,OAAQ,CAAE,CAAAH,QAAA,CAC3EA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}