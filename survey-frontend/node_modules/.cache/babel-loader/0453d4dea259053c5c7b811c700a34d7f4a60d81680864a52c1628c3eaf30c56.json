{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n/**\r\n * ErrorBars have lot more settings but all the others are scoped to the component itself.\r\n * Only some of them required to be reported to the global store because XAxis and YAxis need to know\r\n * if the error bar is contributing to extending the axis domain.\r\n */\n\nvar initialState = {};\nvar errorBarSlice = createSlice({\n  name: 'errorBars',\n  initialState,\n  reducers: {\n    addErrorBar: (state, action) => {\n      var {\n        itemId,\n        errorBar\n      } = action.payload;\n      if (!state[itemId]) {\n        state[itemId] = [];\n      }\n      state[itemId].push(errorBar);\n    },\n    removeErrorBar: (state, action) => {\n      var {\n        itemId,\n        errorBar\n      } = action.payload;\n      if (state[itemId]) {\n        state[itemId] = state[itemId].filter(e => e.dataKey !== errorBar.dataKey || e.direction !== errorBar.direction);\n      }\n    }\n  }\n});\nexport var {\n  addErrorBar,\n  removeErrorBar\n} = errorBarSlice.actions;\nexport var errorBarReducer = errorBarSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","errorBarSlice","name","reducers","addErrorBar","state","action","itemId","errorBar","payload","push","removeErrorBar","filter","e","dataKey","direction","actions","errorBarReducer","reducer"],"sources":["E:/programming/SurveyInkServer/SurveyInk/survey-frontend/node_modules/recharts/es6/state/errorBarSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n/**\r\n * ErrorBars have lot more settings but all the others are scoped to the component itself.\r\n * Only some of them required to be reported to the global store because XAxis and YAxis need to know\r\n * if the error bar is contributing to extending the axis domain.\r\n */\r\n\r\nvar initialState = {};\r\nvar errorBarSlice = createSlice({\r\n  name: 'errorBars',\r\n  initialState,\r\n  reducers: {\r\n    addErrorBar: (state, action) => {\r\n      var {\r\n        itemId,\r\n        errorBar\r\n      } = action.payload;\r\n      if (!state[itemId]) {\r\n        state[itemId] = [];\r\n      }\r\n      state[itemId].push(errorBar);\r\n    },\r\n    removeErrorBar: (state, action) => {\r\n      var {\r\n        itemId,\r\n        errorBar\r\n      } = action.payload;\r\n      if (state[itemId]) {\r\n        state[itemId] = state[itemId].filter(e => e.dataKey !== errorBar.dataKey || e.direction !== errorBar.direction);\r\n      }\r\n    }\r\n  }\r\n});\r\nexport var {\r\n  addErrorBar,\r\n  removeErrorBar\r\n} = errorBarSlice.actions;\r\nexport var errorBarReducer = errorBarSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG,CAAC,CAAC;AACrB,IAAIC,aAAa,GAAGF,WAAW,CAAC;EAC9BG,IAAI,EAAE,WAAW;EACjBF,YAAY;EACZG,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,IAAI;QACFC,MAAM;QACNC;MACF,CAAC,GAAGF,MAAM,CAACG,OAAO;MAClB,IAAI,CAACJ,KAAK,CAACE,MAAM,CAAC,EAAE;QAClBF,KAAK,CAACE,MAAM,CAAC,GAAG,EAAE;MACpB;MACAF,KAAK,CAACE,MAAM,CAAC,CAACG,IAAI,CAACF,QAAQ,CAAC;IAC9B,CAAC;IACDG,cAAc,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACjC,IAAI;QACFC,MAAM;QACNC;MACF,CAAC,GAAGF,MAAM,CAACG,OAAO;MAClB,IAAIJ,KAAK,CAACE,MAAM,CAAC,EAAE;QACjBF,KAAK,CAACE,MAAM,CAAC,GAAGF,KAAK,CAACE,MAAM,CAAC,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKN,QAAQ,CAACM,OAAO,IAAID,CAAC,CAACE,SAAS,KAAKP,QAAQ,CAACO,SAAS,CAAC;MACjH;IACF;EACF;AACF,CAAC,CAAC;AACF,OAAO,IAAI;EACTX,WAAW;EACXO;AACF,CAAC,GAAGV,aAAa,CAACe,OAAO;AACzB,OAAO,IAAIC,eAAe,GAAGhB,aAAa,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}